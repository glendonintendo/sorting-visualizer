{"version":3,"sources":["components/Nav.js","components/Visualizer.js","components/Controller.js","utils/animationsGenerators.js","App.js","index.js"],"names":["Nav","generateArrayBars","onArraySizeSliderChange","onAnimationSpeedSliderChange","arraySize","animationSpeed","alignItems","h","w","base","md","lg","mx","justifyContent","min","max","step","defaultValue","focusThumbOnChange","onChange","value","boxSize","color","as","IoCellular","fontSize","IoSpeedometer","onClick","Visualizer","arrayBars","bg","map","bar","barHeight","key","Controller","stepForwardAnimation","playAnimations","pauseAnimations","stepBackwardAnimation","goToEnd","goToStart","playPauseButton","isPlaying","swap","arr","idx1","idx2","App","useState","setArrayBars","setIsPlaying","setArraySize","setAnimationSpeed","animations","useRef","currentAnimation","array","i","push","Math","floor","random","current","swapped","dupArray","length","j","generateBubbleSortAnimations","useCallback","useEffect","animationTimer","setTimeout","clearTimeout","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1f3fa43b.chunk.js","sourcesContent":["import React from \"react\";\n\nimport {\n  Flex,\n  Box,\n  Button,\n  Slider,\n  SliderTrack,\n  SliderFilledTrack,\n  SliderThumb,\n} from \"@chakra-ui/react\";\n\nimport { IoSpeedometer, IoCellular } from \"react-icons/io5\";\n\nconst Nav = ({\n  generateArrayBars,\n  onArraySizeSliderChange,\n  onAnimationSpeedSliderChange,\n  arraySize,\n  animationSpeed,\n}) => {\n  return (\n    <Flex\n      alignItems=\"center\"\n      h=\"10vh\"\n      w={{ base: \"95vw\", md: \"95vw\", lg: \"80vw\" }}\n      mx=\"auto\"\n      justifyContent=\"space-between\"\n    >\n      <Slider\n        aria-label=\"array size slider\"\n        min={10}\n        max={60}\n        step={1}\n        defaultValue={arraySize}\n        focusThumbOnChange={false}\n        onChange={(value) => onArraySizeSliderChange(value)}\n        w=\"20vw\"\n      >\n        <SliderTrack>\n          <SliderFilledTrack />\n        </SliderTrack>\n        <SliderThumb boxSize={[5, 7, 9]}>\n          <Box\n            color={\"tomato\"}\n            as={IoCellular}\n            fontSize={{ base: \"14px\", md: \"24px\", lg: \"26px\" }}\n          />\n        </SliderThumb>\n      </Slider>\n      <Slider\n        aria-label=\"visualization speed slider\"\n        min={0}\n        max={198}\n        step={2}\n        defaultValue={200 - animationSpeed}\n        focusThumbOnChange={false}\n        onChange={(value) => onAnimationSpeedSliderChange(value)}\n        w=\"20vw\"\n      >\n        <SliderTrack>\n          <SliderFilledTrack />\n        </SliderTrack>\n        <SliderThumb boxSize={[5, 7, 9]}>\n          <Box\n            color={\"tomato\"}\n            as={IoSpeedometer}\n            fontSize={{ base: \"14px\", md: \"28px\", lg: \"28px\" }}\n          />\n        </SliderThumb>\n      </Slider>\n\n      <Button onClick={generateArrayBars}>Generate array!</Button>\n    </Flex>\n  );\n};\n\nexport default Nav;\n","import { Flex, Box } from \"@chakra-ui/react\";\n\nconst Visualizer = ({ arrayBars, arraySize }) => {\n  return (\n    <Flex\n      bg=\"tomato\"\n      h=\"80vh\"\n      w={{ base: \"95vw\", md: \"95vw\", lg: \"80vw\" }}\n      justifyContent=\"space-between\"\n      mx=\"auto\"\n      alignItems=\"flex-end\"\n    >\n      {arrayBars.map((bar) => (\n        <Box\n          bg=\"teal\"\n          h={`${bar.barHeight}%`}\n          w={`${80 / arraySize}%`}\n          key={bar.key}\n        />\n      ))}\n    </Flex>\n  );\n};\n\nexport default Visualizer;\n","import { Flex, Button } from \"@chakra-ui/react\";\nimport {\n  IoPlaySkipBack,\n  IoChevronBack,\n  IoPlay,\n  IoPause,\n  IoChevronForward,\n  IoPlaySkipForward,\n} from \"react-icons/io5\";\n\nconst Controller = ({\n  stepForwardAnimation,\n  playAnimations,\n  pauseAnimations,\n  stepBackwardAnimation,\n  goToEnd,\n  goToStart,\n  isPlaying,\n}) => {\n  const playPauseButton = isPlaying ? (\n    <Button onClick={pauseAnimations}>\n      <IoPause />\n    </Button>\n  ) : (\n    <Button onClick={playAnimations}>\n      <IoPlay />\n    </Button>\n  );\n\n  return (\n    <Flex\n      justifyContent=\"space-between\"\n      alignItems=\"center\"\n      h=\"10vh\"\n      w={{ base: \"95vw\", md: \"60vw\", lg: \"25vw\" }}\n      mx=\"auto\"\n    >\n      <Button onClick={goToStart}>\n        <IoPlaySkipBack />\n      </Button>\n      <Button onClick={stepBackwardAnimation}>\n        <IoChevronBack />\n      </Button>\n      {playPauseButton}\n      <Button onClick={stepForwardAnimation}>\n        <IoChevronForward />\n      </Button>\n      <Button onClick={goToEnd}>\n        <IoPlaySkipForward />\n      </Button>\n    </Flex>\n  );\n};\n\nexport default Controller;\n","const swap = (arr, idx1, idx2) => {\n  [arr[idx1], arr[idx2]] = [arr[idx2], arr[idx1]];\n}\n\nexport const generateBubbleSortAnimations = (array) => {\n  const animations = [];\n  const dupArray = [...array];\n\n  let swapped;\n  for (let i = dupArray.length; i > 0; i--) {\n    swapped = false;\n    for (let j = 0; j < i - 1; j++) {\n      if (dupArray[j].barHeight > dupArray[j + 1].barHeight) {\n        animations.push([j, j + 1]);\n        swap(dupArray, j, j + 1);\n        swapped = true;\n      }\n    }\n    if (swapped === false) break;\n  };\n\n  return animations;\n}","import { useState, useEffect, useRef, useCallback } from \"react\";\nimport Nav from \"./components/Nav\";\nimport Visualizer from \"./components/Visualizer\";\nimport Controller from \"./components/Controller\";\n\nimport { generateBubbleSortAnimations } from \"./utils/animationsGenerators\";\n\nfunction App() {\n  const [arrayBars, setArrayBars] = useState([]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [arraySize, setArraySize] = useState(30);\n  const [animationSpeed, setAnimationSpeed] = useState(50);\n  const animations = useRef([]);\n  const currentAnimation = useRef(0);\n\n  const generateArrayBars = () => {\n    const array = [];\n    for (let i = 0; i < arraySize; i++) {\n      array.push({\n        barHeight: Math.floor(Math.random() * 96) + 5,\n        key: i,\n      });\n    }\n\n    setArrayBars(array);\n    setIsPlaying(false);\n    animations.current = generateBubbleSortAnimations(array);\n    currentAnimation.current = 0;\n  };\n\n  const stepForwardAnimation = useCallback(() => {\n    if (currentAnimation.current >= animations.current.length) {\n      setIsPlaying(false);\n      return;\n    }\n    const [idx1, idx2] = animations.current[currentAnimation.current];\n    const array = [...arrayBars];\n    [array[idx1], array[idx2]] = [array[idx2], array[idx1]];\n    currentAnimation.current++;\n    setArrayBars(array);\n  }, [arrayBars]);\n\n  const stepBackwardAnimation = () => {\n    if (currentAnimation.current <= 0) return;\n    currentAnimation.current--;\n    const [idx1, idx2] = animations.current[currentAnimation.current];\n    const array = [...arrayBars];\n    [array[idx1], array[idx2]] = [array[idx2], array[idx1]];\n    setArrayBars(array);\n  };\n\n  const goToStart = () => {\n    const array = [...arrayBars];\n    for (let i = currentAnimation.current - 1; i >= 0; i--) {\n      const [idx1, idx2] = animations.current[i];\n      [array[idx1], array[idx2]] = [array[idx2], array[idx1]];\n    }\n    currentAnimation.current = 0;\n    setArrayBars(array);\n  };\n\n  const goToEnd = () => {\n    const array = [...arrayBars];\n    for (let i = currentAnimation.current; i < animations.current.length; i++) {\n      const [idx1, idx2] = animations.current[i];\n      [array[idx1], array[idx2]] = [array[idx2], array[idx1]];\n    }\n    currentAnimation.current = animations.current.length;\n    setArrayBars(array);\n  };\n\n  const onArraySizeSliderChange = (value) => {\n    setArraySize(value);\n  };\n\n  const onAnimationSpeedSliderChange = (value) => {\n    setAnimationSpeed(200 - value);\n  };\n\n  const playAnimations = () => {\n    setIsPlaying(true);\n  };\n\n  const pauseAnimations = () => {\n    setIsPlaying(false);\n  };\n\n  useEffect(() => {\n    generateArrayBars();\n  }, []);\n\n  useEffect(() => {\n    if (isPlaying) {\n      const animationTimer = setTimeout(stepForwardAnimation, animationSpeed);\n\n      return () => clearTimeout(animationTimer);\n    }\n  }, [isPlaying, arrayBars, stepForwardAnimation]);\n\n  useEffect(() => {\n    generateArrayBars();\n  }, [arraySize]);\n\n  return (\n    <>\n      <Nav\n        generateArrayBars={generateArrayBars}\n        onArraySizeSliderChange={onArraySizeSliderChange}\n        onAnimationSpeedSliderChange={onAnimationSpeedSliderChange}\n        arraySize={arraySize}\n        animationSpeed={animationSpeed}\n      />\n      <Visualizer arrayBars={arrayBars} arraySize={arraySize} />\n      <Controller\n        stepForwardAnimation={stepForwardAnimation}\n        playAnimations={playAnimations}\n        pauseAnimations={pauseAnimations}\n        stepBackwardAnimation={stepBackwardAnimation}\n        goToEnd={goToEnd}\n        goToStart={goToStart}\n        isPlaying={isPlaying}\n      />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { ChakraProvider } from '@chakra-ui/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider>\n      <App />\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}