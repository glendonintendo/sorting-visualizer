{"version":3,"sources":["components/SortTypeSelect.js","components/Nav.js","components/Visualizer.js","components/Controller.js","utils/animationsGenerators.js","App.js","index.js"],"names":["SortTypeSelect","sortType","onSelectSortType","value","onChange","e","target","disabled","Nav","generateArrayBars","onArraySizeSliderChange","onAnimationSpeedSliderChange","arraySize","animationSpeed","isPlaying","toggleColorMode","colorMode","alignItems","h","w","base","md","lg","mx","justifyContent","min","max","step","defaultValue","focusThumbOnChange","colorScheme","boxSize","color","as","IoCellular","fontSize","IoSpeedometer","onClick","icon","isDisabled","display","Visualizer","arrayBars","borderBottom","borderColor","pb","map","bar","bg","barHeight","key","Controller","stepForwardAnimation","playAnimations","pauseAnimations","stepBackwardAnimation","goToEnd","goToStart","currentAnimation","animations","playPauseButton","length","swap","arr","idx1","idx2","mergeSortHelper","array","start","end","auxiliary","mid","Math","floor","merge","k","i","j","quickSortHelper","randIdx","random","push","type","indeces","pivot","leftIdx","rightIdx","generateAnimations","swapped","dupArray","generateBubbleSortAnimations","generateSelectionSortAnimations","generateInsertionSortAnimations","currVal","currIdx","parIdx","leftChildIdx","rightChildIdx","leftChildVal","rightChildVal","idxToSwap","generateHeapSortAnimations","generateMergeSortAnimations","generateQuickSortAnimations","App","useState","setArrayBars","setIsPlaying","setArraySize","setSortType","setAnimationSpeed","useRef","useColorMode","current","useCallback","barObj","useEffect","animationTimer","setTimeout","clearTimeout","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.50534119.chunk.js","sourcesContent":["import { Select } from \"@chakra-ui/react\";\r\n\r\nconst SortTypeSelect = ({ sortType, onSelectSortType }) => {\r\n  return (\r\n    <Select value={sortType} onChange={(e) => onSelectSortType(e.target.value)}>\r\n      <option value=\"bubble\">Bubble</option>\r\n      <option value=\"selection\">Selection</option>\r\n      <option value=\"insertion\">Insertion</option>\r\n      <option value=\"heap\">Heap</option>\r\n      <option disabled value=\"merge\">Merge (coming soon!)</option>\r\n      <option value=\"quick\">Quick</option>\r\n    </Select>\r\n  );\r\n};\r\n\r\nexport default SortTypeSelect;\r\n","import { IoSpeedometer, IoCellular } from \"react-icons/io5\";\nimport { IoMdRefresh } from \"react-icons/io\";\nimport { IoMoon, IoSunny } from \"react-icons/io5\";\nimport {\n  Flex,\n  Box,\n  IconButton,\n  Slider,\n  SliderTrack,\n  SliderFilledTrack,\n  SliderThumb,\n} from \"@chakra-ui/react\";\n\nimport SortTypeSelect from \"./SortTypeSelect\";\n\nconst Nav = ({\n  generateArrayBars,\n  onArraySizeSliderChange,\n  onAnimationSpeedSliderChange,\n  arraySize,\n  animationSpeed,\n  sortType,\n  onSelectSortType,\n  isPlaying,\n  toggleColorMode,\n  colorMode\n}) => {\n  return (\n    <Flex\n      alignItems=\"center\"\n      h=\"10vh\"\n      w={{ base: \"95vw\", md: \"95vw\", lg: \"80vw\" }}\n      mx=\"auto\"\n      justifyContent=\"space-around\"\n    >\n      <Slider\n        aria-label=\"array size slider\"\n        min={10}\n        max={60}\n        step={1}\n        defaultValue={arraySize}\n        focusThumbOnChange={false}\n        onChange={(value) => onArraySizeSliderChange(value)}\n        colorScheme=\"teal\"\n        w=\"20vw\"\n      >\n        <SliderTrack>\n          <SliderFilledTrack />\n        </SliderTrack>\n        <SliderThumb boxSize={[5, 7, 9]}>\n          <Box\n            color={\"tomato\"}\n            as={IoCellular}\n            fontSize={{ base: \"14px\", md: \"24px\", lg: \"26px\" }}\n          />\n        </SliderThumb>\n      </Slider>\n      <Slider\n        aria-label=\"visualization speed slider\"\n        min={0}\n        max={198}\n        step={2}\n        defaultValue={200 - animationSpeed}\n        focusThumbOnChange={false}\n        onChange={(value) => onAnimationSpeedSliderChange(value)}\n        colorScheme=\"teal\"\n        w=\"20vw\"\n      >\n        <SliderTrack>\n          <SliderFilledTrack />\n        </SliderTrack>\n        <SliderThumb boxSize={[5, 7, 9]}>\n          <Box\n            color={\"tomato\"}\n            as={IoSpeedometer}\n            fontSize={{ base: \"14px\", md: \"28px\", lg: \"28px\" }}\n          />\n        </SliderThumb>\n      </Slider>\n\n      <Box w={[\"35%\", \"25%\", \"16%\", \"15%\"]}>\n        <SortTypeSelect\n          sortType={sortType}\n          onSelectSortType={onSelectSortType}\n        />\n      </Box>\n\n      <IconButton\n        onClick={generateArrayBars}\n        icon={<IoMdRefresh />}\n        colorScheme=\"teal\"\n        fontSize=\"24px\"\n        isDisabled={isPlaying}\n      ></IconButton>\n      <IconButton\n        display={[\"none\", \"reset\", \"reset\", \"reset\"]}\n        onClick={toggleColorMode}\n        icon={colorMode === \"light\" ? <IoMoon /> : <IoSunny />}\n        colorScheme=\"teal\"\n        fontSize=\"24px\"\n      ></IconButton>\n    </Flex>\n  );\n};\n\nexport default Nav;\n","import { Flex, Box } from \"@chakra-ui/react\";\n\nconst Visualizer = ({ arrayBars, arraySize, colorMode }) => {\n  return (\n    <Flex\n      h=\"80vh\"\n      w={{ base: \"95vw\", md: \"95vw\", lg: \"80vw\" }}\n      justifyContent=\"space-between\"\n      mx=\"auto\"\n      alignItems=\"flex-end\"\n      borderBottom={`5px solid`}\n      borderColor={colorMode === \"light\" ? \"teal.500\" : \"teal.200\"}\n      pb=\"1.5vh\"\n    >\n      {arrayBars.map((bar) => (\n        <Box\n          bg={colorMode === \"light\" ? `${bar.color}.500` : `${bar.color}.200`}\n          h={`${bar.barHeight}%`}\n          w={`${80 / arraySize}%`}\n          key={bar.key}\n        />\n      ))}\n    </Flex>\n  );\n};\n\nexport default Visualizer;\n","import { Flex, IconButton } from \"@chakra-ui/react\";\nimport {\n  IoPlaySkipBack,\n  IoChevronBack,\n  IoPlay,\n  IoPause,\n  IoChevronForward,\n  IoPlaySkipForward,\n} from \"react-icons/io5\";\n\nconst Controller = ({\n  stepForwardAnimation,\n  playAnimations,\n  pauseAnimations,\n  stepBackwardAnimation,\n  goToEnd,\n  goToStart,\n  isPlaying,\n  currentAnimation,\n  animations\n}) => {\n  const playPauseButton = isPlaying ? (\n    <IconButton\n      onClick={pauseAnimations}\n      icon={<IoPause />}\n      colorScheme=\"teal\"\n    />\n  ) : (\n    <IconButton onClick={playAnimations} icon={<IoPlay />} colorScheme=\"teal\" />\n  );\n\n  return (\n    <Flex\n      justifyContent=\"space-between\"\n      alignItems=\"center\"\n      h=\"10vh\"\n      w={{ base: \"95vw\", md: \"60vw\", lg: \"25vw\" }}\n      mx=\"auto\"\n    >\n      <IconButton\n        onClick={goToStart}\n        icon={<IoPlaySkipBack />}\n        colorScheme=\"teal\"\n      />\n      <IconButton\n        onClick={stepBackwardAnimation}\n        icon={<IoChevronBack />}\n        colorScheme=\"teal\"\n        isDisabled={isPlaying || currentAnimation === 0}\n      />\n      {playPauseButton}\n      <IconButton\n        onClick={stepForwardAnimation}\n        icon={<IoChevronForward />}\n        colorScheme=\"teal\"\n        isDisabled={isPlaying || currentAnimation >= animations.length}\n      />\n      <IconButton\n        onClick={goToEnd}\n        icon={<IoPlaySkipForward />}\n        colorScheme=\"teal\"\n      />\n    </Flex>\n  );\n};\n\nexport default Controller;\n","const swap = (arr, idx1, idx2) => {\n  [arr[idx1], arr[idx2]] = [arr[idx2], arr[idx1]];\n};\n\nconst generateBubbleSortAnimations = (array) => {\n  const animations = [];\n  const dupArray = [...array];\n\n  let swapped;\n  for (let i = dupArray.length; i > 0; i--) {\n    swapped = false;\n    for (let j = 0; j < i - 1; j++) {\n      // animations.push({type: \"color\", indeces: [j, j + 1]})\n      if (dupArray[j].barHeight > dupArray[j + 1].barHeight) {\n        animations.push({ type: \"swap\", indeces: [j, j + 1] });\n        swap(dupArray, j, j + 1);\n        swapped = true;\n      }\n    }\n    if (swapped === false) break;\n  }\n\n  return animations;\n};\n\nconst generateSelectionSortAnimations = (array) => {\n  const animations = [];\n  const dupArray = [...array];\n\n  for (let i = 0; i < dupArray.length; i++) {\n    let min = i;\n    for (let j = i; j < dupArray.length; j++) {\n      if (dupArray[j].barHeight < dupArray[min].barHeight) {\n        min = j;\n      }\n    }\n    animations.push({ type: \"swap\", indeces: [i, min] });\n    swap(dupArray, i, min);\n  }\n\n  return animations;\n};\n\nconst generateInsertionSortAnimations = (array) => {\n  const animations = [];\n  const dupArray = [...array];\n\n  for (let i = 1; i < dupArray.length; i++) {\n    let j = i;\n    while (j > 0 && dupArray[j].barHeight < dupArray[j - 1].barHeight) {\n      animations.push({ type: \"swap\", indeces: [j, j - 1] });\n      swap(dupArray, j, j - 1);\n      j -= 1;\n    }\n  }\n\n  return animations;\n};\n\nconst generateHeapSortAnimations = (array) => {\n  const animations = [];\n  const dupArray = [...array];\n\n  for (let i = 1; i < dupArray.length; i++) {\n    const currVal = dupArray[i].barHeight;\n    let currIdx = i;\n\n    while (currIdx > 0) {\n      const parIdx = Math.floor((currIdx - 1) / 2);\n      if (currVal <= dupArray[parIdx].barHeight) break;\n      animations.push({ type: \"swap\", indeces: [currIdx, parIdx] });\n      swap(dupArray, currIdx, parIdx);\n      currIdx = parIdx;\n    }\n  }\n\n  for (let end = dupArray.length - 1; end > 0; end--) {\n    animations.push({ type: \"swap\", indeces: [0, end] });\n    swap(dupArray, 0, end);\n    let currIdx = 0;\n    const currVal = dupArray[0].barHeight;\n\n    while (true) {\n      let leftChildIdx = 2 * currIdx + 1;\n      let rightChildIdx = 2 * currIdx + 2;\n      let leftChildVal, rightChildVal;\n      let idxToSwap = null;\n\n      if (leftChildIdx < end) {\n        leftChildVal = dupArray[leftChildIdx].barHeight;\n        if (leftChildVal > currVal) {\n          idxToSwap = leftChildIdx;\n        }\n      }\n\n      if (rightChildIdx < end) {\n        rightChildVal = dupArray[rightChildIdx].barHeight;\n        if (\n          (rightChildVal > currVal && idxToSwap === null) ||\n          (rightChildVal > leftChildVal && idxToSwap !== null)\n        ) {\n          idxToSwap = rightChildIdx;\n        }\n      }\n\n      if (idxToSwap === null) break;\n\n      animations.push({ type: \"swap\", indeces: [currIdx, idxToSwap] });\n      swap(dupArray, currIdx, idxToSwap);\n      currIdx = idxToSwap;\n    }\n  }\n\n  return animations;\n};\n\nconst generateMergeSortAnimations = (array) => {\n  const animations = [];\n  const dupArray = [...array];\n  if (dupArray.length <= 1) return dupArray;\n  const auxiliary = [...array];\n  mergeSortHelper(dupArray, 0, array.length - 1, auxiliary, animations);\n  return animations;\n};\n\nconst mergeSortHelper = (array, start, end, auxiliary, animations) => {\n  if (start === end) return;\n  const mid = Math.floor((start + end) / 2);\n  mergeSortHelper(auxiliary, start, mid, array, animations);\n  mergeSortHelper(auxiliary, mid + 1, end, array, animations);\n  merge(array, start, mid, end, auxiliary, animations);\n};\n\nconst merge = (array, start, mid, end, auxiliary, animations) => {\n  let k = start;\n  let i = start;\n  let j = mid + 1;\n  while (i <= mid && j <= end) {\n    if (auxiliary[i].barHeight <= auxiliary[j].barHeight) array[k++] = auxiliary[j++];\n    else array[k++] = auxiliary[j++];\n  }\n  while (i <= mid) array[k++] = auxiliary[i++];\n  while (j <= end) array[k++] = auxiliary[j++];\n};\n\nconst generateQuickSortAnimations = (array) => {\n  const animations = [];\n  const dupArray = [...array];\n  quickSortHelper(dupArray, 0, dupArray.length - 1, animations);\n  return animations;\n};\n\nconst quickSortHelper = (array, start, end, animations) => {\n  if (start >= end) return;\n  const randIdx = Math.floor(Math.random() * (end - start) + start);\n  if (start !== randIdx)\n    animations.push({ type: \"swap\", indeces: [start, randIdx] });\n  swap(array, start, randIdx);\n  const pivot = array[start].barHeight;\n  let leftIdx = start;\n  let rightIdx = start + 1;\n  while (rightIdx <= end) {\n    if (array[rightIdx].barHeight < pivot) {\n      leftIdx++;\n      if (rightIdx !== leftIdx)\n        animations.push({ type: \"swap\", indeces: [rightIdx, leftIdx] });\n      swap(array, rightIdx, leftIdx);\n    }\n    rightIdx++;\n  }\n  if (start !== leftIdx)\n    animations.push({ type: \"swap\", indeces: [start, leftIdx] });\n  swap(array, start, leftIdx);\n  quickSortHelper(array, start, leftIdx - 1, animations);\n  quickSortHelper(array, leftIdx + 1, rightIdx - 1, animations);\n};\n\nexport const generateAnimations = (array, sortType) => {\n  switch (sortType) {\n    case \"bubble\":\n      return generateBubbleSortAnimations(array);\n    case \"selection\":\n      return generateSelectionSortAnimations(array);\n    case \"insertion\":\n      return generateInsertionSortAnimations(array);\n    case \"heap\":\n      return generateHeapSortAnimations(array);\n    case \"merge\":\n      return generateMergeSortAnimations(array);\n    case \"quick\":\n      return generateQuickSortAnimations(array);\n    default:\n      return;\n  }\n};\n","import { useState, useEffect, useRef, useCallback } from \"react\";\nimport Nav from \"./components/Nav\";\nimport Visualizer from \"./components/Visualizer\";\nimport Controller from \"./components/Controller\";\n\nimport { generateAnimations } from \"./utils/animationsGenerators\";\n\nimport { color, useColorMode } from \"@chakra-ui/react\";\n\nfunction App() {\n  const [arrayBars, setArrayBars] = useState([]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [arraySize, setArraySize] = useState(30);\n  const [sortType, setSortType] = useState(\"bubble\");\n  const [animationSpeed, setAnimationSpeed] = useState(50);\n  const animations = useRef([]);\n  const currentAnimation = useRef(0);\n  const { colorMode, toggleColorMode } = useColorMode();\n\n  const generateArrayBars = () => {\n    const array = [];\n    for (let i = 0; i < arraySize; i++) {\n      array.push({\n        barHeight: Math.floor(Math.random() * 96) + 5,\n        color: \"teal\",\n        key: i,\n      });\n    }\n\n    setArrayBars(array);\n    setIsPlaying(false);\n    animations.current = generateAnimations(array, sortType);\n    currentAnimation.current = 0;\n  };\n\n  const stepForwardAnimation = useCallback(() => {\n    if (currentAnimation.current >= animations.current.length) {\n      setIsPlaying(false);\n      return;\n    }\n    let array = [...arrayBars];\n    const [idx1, idx2] = animations.current[currentAnimation.current].indeces;\n    switch (animations.current[currentAnimation.current].type) {\n      case \"swap\":\n        [array[idx1], array[idx2]] = [array[idx2], array[idx1]];\n        break;\n      case \"color\":\n        array = array.map((barObj, i) => {\n          if (i === idx1 || i === idx2) {\n            const coloredBar = { ...barObj, color: \"black\" };\n            return coloredBar;\n          }\n          return { ...barObj, color: \"teal\" };\n        });\n        break;\n      default:\n        break;\n    }\n\n    currentAnimation.current++;\n    setArrayBars(array);\n  }, [arrayBars]);\n\n  const stepBackwardAnimation = () => {\n    if (currentAnimation.current <= 0) return;\n    currentAnimation.current--;\n\n    if (animations.current[currentAnimation.current].type === \"swap\") {\n      const [idx1, idx2] = animations.current[currentAnimation.current].indeces;\n      const array = [...arrayBars];\n      [array[idx1], array[idx2]] = [array[idx2], array[idx1]];\n      setArrayBars(array);\n    }\n  };\n\n  const goToStart = () => {\n    const array = [...arrayBars];\n    for (let i = currentAnimation.current - 1; i >= 0; i--) {\n      const [idx1, idx2] = animations.current[i].indeces;\n      [array[idx1], array[idx2]] = [array[idx2], array[idx1]];\n    }\n    currentAnimation.current = 0;\n    setArrayBars(array);\n    setIsPlaying(false);\n  };\n\n  const goToEnd = () => {\n    const array = [...arrayBars];\n    for (let i = currentAnimation.current; i < animations.current.length; i++) {\n      const [idx1, idx2] = animations.current[i].indeces;\n      [array[idx1], array[idx2]] = [array[idx2], array[idx1]];\n    }\n    currentAnimation.current = animations.current.length;\n    setArrayBars(array);\n  };\n\n  const onArraySizeSliderChange = (value) => {\n    setArraySize(value);\n  };\n\n  const onAnimationSpeedSliderChange = (value) => {\n    setAnimationSpeed(200 - value);\n  };\n  \n  const onSelectSortType = (value) => {\n    setSortType(value);\n  }\n\n  const playAnimations = () => {\n    setIsPlaying(true);\n  };\n\n  const pauseAnimations = () => {\n    setIsPlaying(false);\n  };\n\n  useEffect(() => {\n    generateArrayBars();\n  }, []);\n\n  useEffect(() => {\n    if (isPlaying) {\n      const animationTimer = setTimeout(stepForwardAnimation, animationSpeed);\n\n      return () => clearTimeout(animationTimer);\n    }\n  }, [isPlaying, arrayBars, stepForwardAnimation]);\n\n  useEffect(() => {\n    generateArrayBars();\n  }, [arraySize, sortType]);\n\n  return (\n    <>\n      <Nav\n        generateArrayBars={generateArrayBars}\n        onArraySizeSliderChange={onArraySizeSliderChange}\n        onAnimationSpeedSliderChange={onAnimationSpeedSliderChange}\n        arraySize={arraySize}\n        animationSpeed={animationSpeed}\n        sortType={sortType}\n        onSelectSortType={onSelectSortType}\n        isPlaying={isPlaying}\n        toggleColorMode={toggleColorMode}\n        colorMode={colorMode}\n      />\n      <Visualizer arrayBars={arrayBars} arraySize={arraySize} colorMode={colorMode} />\n      <Controller\n        stepForwardAnimation={stepForwardAnimation}\n        playAnimations={playAnimations}\n        pauseAnimations={pauseAnimations}\n        stepBackwardAnimation={stepBackwardAnimation}\n        goToEnd={goToEnd}\n        goToStart={goToStart}\n        isPlaying={isPlaying}\n        currentAnimation={currentAnimation.current}\n        animations={animations.current}\n      />\n    </>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\n\nReactDOM.render(\n  <ChakraProvider>\n    <App />\n  </ChakraProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}